/*==============================================================================
    GRIDS
    ----------------------------------------------------------------------------
	This file is generated from _grid.scss	
	
==============================================================================*/

// config
$base-font-size: 14px;
$grid-gutter-width: 20px;
$total-grid-columns: 12;
$grid-width: percentage(1 / $total-grid-columns);

.grid {
	// Make grid a flex container
	@include display(flex);
	// Allows flex items to wrap to another line
	@include flex-wrap(wrap);

	// "remove" the gutters from the flex container
	margin-left: -$grid-gutter-width / 2;
	margin-right: -$grid-gutter-width / 2;
}

//==============================================================================
// Alignment Modifiers
//==============================================================================

// vertical alignment
.grid.grid-align-b {
	@include align-items(flex-end);
}
.grid.grid-align-m {
	@include align-items(center);
}

// horizontal alignment
.grid.grid-align-c {
    @include justify-content(center);
}
.grid.grid-align-r {
    @include justify-content(flex-end);
}

.grid > [class*=grid-col] {
	// makes columns flexible, basis 0
	@include flex(1); // shorthand for flex: [i] 1 0px;

	// bring padding into width
	@include box-sizing(border-box);
	// make gutters with padding
	padding-left: $grid-gutter-width / 2;
	padding-right: $grid-gutter-width / 2;
}

//==============================================================================
// Removing gutters
//==============================================================================

// remove all gutters from the grid
.grid.squash {
	margin-left: 0;
	margin-right: 0;
}
.grid.squash > [class*=grid-col] {
	padding-left: 0;
	padding-right: 0;
}

// remove gutters from select column
// add squash-next the column _before_ the gutter that you want collapsed
.grid .squash-next {
	padding-right: 0;
}
.grid .squash-next + [class*=grid-col] {
	padding-left: 0;
}

//==============================================================================
//
// layouts using
// Allows for creating columns that span "n" of $total-grid-columns columns
//
//==============================================================================

.grid > [class*=grid-col-] {
	@include flex-grow(0);
	@include flex-shrink(0);
}

.grid {
	// generate classes for columns and offset
	@for $i from 1 through $total-grid-columns {
		// column classes
		& > .grid-col-#{$i} {
			@include flex-basis($i * $grid-width);
		}

		// offset classes
		// used to shift columns left by a specified number of columns
		& > .offset-#{$i} {
			margin-left: $i * $grid-width;
		}
	}
}

//==============================================================================
//
// n-up layouts
// Allows for "n" evenly-distributed boxes/columns
//
//==============================================================================

@each $i in (2,3,4,5,6,8,9,12) {
	.grid-#{$i}up  > .grid-col {
		// Specify the width of the flex item
		@include flex(0 0 percentage(1/$i));
	}
}
